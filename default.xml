<?xml version="1.0" encoding="UTF-8"?>
<manifest>
  <remote  name="aosp" fetch=".." review="https://android-review.googlesource.com/" />
  <remote name="github" fetch="https://github.com/skywalker0507/" />
  <default revision="main" remote="aosp" sync-j="4" />
  <superproject name="kernel/superproject" remote="aosp" revision="common-android-mainline" />
  <project path="build/kernel" name="kernel/build" groups="ddk" >
    <linkfile src="kleaf/bazel.sh" dest="tools/bazel" />
    <linkfile src="kleaf/bzlmod/bazel.MODULE.bazel" dest="MODULE.bazel" />
  </project>
  <project path="build/bazel_common_rules" name="platform/build/bazel_common_rules" groups="ddk" />
  <project path="common" name="kernel_common" revision="android-mainline" remote="github"/>
  <project path="kernel/common-patches" name="kernel/common-patches" >
      <linkfile src="android-mainline" dest="common/patches" />
  </project>
  <project path="kernel/configs" name="kernel/configs" revision="main" />
  <project path="kernel/tests" name="kernel/tests" revision="main" >
    <linkfile src="tools/run_test_only.sh" dest="run_test_only.sh" />
    <linkfile src="tools/launch_cvd.sh" dest="launch_cvd.sh" />
    <linkfile src="tools/flash_device.sh" dest="flash_device.sh" />
  </project>
  <project path="common-modules/trusty" name="kernel/common-modules/trusty" />
  <project path="common-modules/virtio-media" name="platform/external/virtio-media" />
  <project path="common-modules/virtual-device" name="kernel/common-modules/virtual-device" revision="android-mainline" />
  <project path="prebuilts/clang/host/linux-x86" name="platform/prebuilts/clang/host/linux-x86" revision="main-kernel" clone-depth="1" groups="ddk" />
  <project path="prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8" name="platform/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8" clone-depth="1" groups="ddk" />
  <project path="prebuilts/build-tools" name="platform/prebuilts/build-tools" clone-depth="1" groups="ddk" />
  <project path="prebuilts/clang-tools" name="platform/prebuilts/clang-tools" clone-depth="1" groups="ddk" />
  <project path="prebuilts/kernel-build-tools" name="kernel/prebuilts/build-tools" clone-depth="1" groups="ddk" />
  <project path="prebuilts/rust" name="platform/prebuilts/rust" revision="main-kernel" clone-depth="1" groups="ddk" />
  <project path="prebuilts/tradefed" name="platform/tools/tradefederation/prebuilts" revision="main" clone-depth="1" />
  <project path="prebuilts/asuite" name="platform/prebuilts/asuite" revision="main" clone-depth="1" />
  <project path="tools/mkbootimg" name="platform/system/tools/mkbootimg" />
  <project path="prebuilts/jdk/jdk11" name="platform/prebuilts/jdk/jdk11" revision="main-kernel" clone-depth="1" />
  <project path="prebuilts/ndk-r26" name="toolchain/prebuilts/ndk/r26" clone-depth="1" groups="ddk" />
  <project path="external/libcap-ng" name="platform/external/libcap-ng"/>
  <project path="external/libcap" name="platform/external/libcap"/>
  <!-- deps for for bzlmod -->
  <project path="external/bazel-contrib-bazel_features" name="platform/external/bazel-contrib-bazel_features" groups="ddk-external" />
  <project path="external/bazel-skylib" name="platform/external/bazel-skylib" groups="ddk-external" />
  <project path="external/bazelbuild-bazel-central-registry" name="platform/external/bazelbuild-bazel-central-registry" groups="ddk-external" />
  <project path="external/bazelbuild-platforms" name="platform/external/bazelbuild-platforms" groups="ddk-external" />
  <project path="external/bazelbuild-apple_support" name="platform/external/bazelbuild-apple_support" groups="ddk-external" />
  <project path="external/bazelbuild-rules_cc" name="platform/external/bazelbuild-rules_cc" groups="ddk-external" />
  <project path="external/bazelbuild-rules_java" name="platform/external/bazelbuild-rules_java" groups="ddk-external"/>
  <project path="external/bazelbuild-rules_license" name="platform/external/bazelbuild-rules_license" groups="ddk-external" />
  <project path="external/bazelbuild-rules_pkg" name="platform/external/bazelbuild-rules_pkg" groups="ddk-external" />
  <project path="external/bazelbuild-rules_python" name="platform/external/bazelbuild-rules_python" groups="ddk-external" />
  <project path="external/bazelbuild-rules_rust" name="platform/external/bazelbuild-rules_rust" groups="ddk-external" />
  <project path="external/bazelbuild-rules_shell" name="platform/external/bazelbuild-rules_shell" groups="ddk-external" />
  <project path="external/python/absl-py" name="platform/external/python/absl-py" groups="ddk-external" />
  <!-- dependencies used to build toolchain from sources -->
  <project path="external/lz4" name="platform/external/lz4" groups="ddk"/>
  <project path="external/pigz" name="platform/external/pigz" groups="ddk"/>
  <project path="external/toybox" name="platform/external/toybox" groups="ddk"/>
  <project path="external/zlib" name="platform/external/zlib" groups="ddk"/>
  <project path="external/zopfli" name="platform/external/zopfli" groups="ddk"/>
  <project path="test/dittosuite" name="platform/test/dittosuite"/>
  <project path="test/ltp" name="platform/external/ltp"/>
</manifest>
